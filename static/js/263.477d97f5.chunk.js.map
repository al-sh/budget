{"version":3,"file":"static/js/263.477d97f5.chunk.js","mappings":"2LASaA,EAAsC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3D,OACE,SAAC,IAAD,CAAQD,MAAOA,EAAOC,SAAUA,EAAhC,SACGC,EAAAA,EAAAA,KAAU,SAACC,GAAD,OACT,SAAC,WAAD,CAAgCH,MAAOG,EAAKH,MAA5C,SACGG,EAAKC,IADYD,EAAKH,c,oNCPpBK,EAAsD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5DC,GAAYC,EAAAA,EAAAA,KAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAQ,QAEtB,OACE,4BACE,sFAEA,UAAC,IAAD,CACEK,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,OAAO,WACPC,WAAY,CACVF,KAAM,IAERG,cAAe,CACbC,aAAc,EACdN,KAAM,IAERN,SAAU,SAACa,GACTR,EAAMS,OAAOD,GACbE,QAAQC,IAAI,mBACZb,EAASc,EAAAA,GAAAA,SAAAA,UACTjB,KAEFkB,aAAa,MAnBf,WAqBE,SAAC,SAAD,CACEC,MAAM,mDACNb,KAAK,OACLc,MAAO,CACL,CACEC,QAAS,6HACTC,UAAU,IANhB,UAUE,SAAC,IAAD,OAGF,SAAC,SAAD,CAAWH,MAAM,uCAASb,KAAK,OAA/B,UACE,SAACb,EAAA,EAAD,OAGF,SAAC,SAAD,CAAW0B,MAAM,6CAAUb,KAAK,eAAhC,UACE,SAAC,IAAD,CACEiB,MAAO,CACLC,MAAO,UAKb,SAAC,SAAD,CACEd,WAAY,CACVe,OAAQ,EACRjB,KAAM,IAHV,UAME,SAAC,IAAD,CAAQkB,KAAK,UAAUC,SAAS,SAASC,SAAUvB,EAAMwB,UAAzD,yEAKHxB,EAAMwB,YAAa,sI,UCnEbC,EAA0B,WACrC,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,iCACE,SAACC,EAAA,EAAD,KACA,SAAC,IAAD,CACEC,QAAS,WACPF,GAAgB,IAFpB,8DAOCD,IACC,SAACjC,EAAD,CACEC,SAAU,WACRiC,GAAgB,UAQ5B","sources":["components/accounts/icons/AccountIconSelect.tsx","components/accounts/AccountNewForm.tsx","components/accounts/pages/AccountsPage.tsx"],"sourcesContent":["import { Select } from 'antd';\r\nimport React from 'react';\r\nimport { icons } from './icons';\r\n\r\ninterface Props {\r\n  onChange?: (newValue: number) => void;\r\n  value?: number;\r\n}\r\n\r\nexport const AccountIconSelect: React.VFC<Props> = ({ value, onChange }) => {\r\n  return (\r\n    <Select value={value} onChange={onChange}>\r\n      {icons.map((item) => (\r\n        <Select.Option key={item.value} value={item.value}>\r\n          {item.el}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import { Form, Input, Button, InputNumber } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAccounts } from '../../hooks/useAccounts';\r\nimport { UI_ROUTES } from '../../constants/urls';\r\nimport { AccountIconSelect } from './icons/AccountIconSelect';\r\n\r\nexport const AccountNewForm: React.VFC<{ onFinish: () => void }> = ({ onFinish }) => {\r\n  const { useItem } = useAccounts();\r\n  const navigate = useNavigate();\r\n  const query = useItem('POST');\r\n\r\n  return (\r\n    <div>\r\n      <div>Новый счет</div>\r\n\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        layout=\"vertical\"\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        initialValues={{\r\n          initialValue: 0,\r\n          name: '',\r\n        }}\r\n        onFinish={(formValues) => {\r\n          query.mutate(formValues);\r\n          console.log('query.isSuccess');\r\n          navigate(UI_ROUTES.SETTINGS.ACCOUNTS);\r\n          onFinish();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Название\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              message: 'Введите название счета',\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Иконка\" name=\"icon\">\r\n          <AccountIconSelect />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Остаток\" name=\"initialValue\">\r\n          <InputNumber\r\n            style={{\r\n              width: 300,\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\" disabled={query.isLoading}>\r\n            Сохранить\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      {query.isLoading && <div>Сохранение данных...</div>}\r\n    </div>\r\n  );\r\n};\r\n","import { Button } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { AccountNewForm } from '../AccountNewForm';\r\nimport { AccountsList } from '../AccountsList';\r\n\r\nexport const AccountsPage: React.VFC = () => {\r\n  const [isAddAccount, setIsAddAccount] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <AccountsList />\r\n      <Button\r\n        onClick={() => {\r\n          setIsAddAccount(true);\r\n        }}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      {isAddAccount && (\r\n        <AccountNewForm\r\n          onFinish={() => {\r\n            setIsAddAccount(false);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountsPage;\r\n"],"names":["AccountIconSelect","value","onChange","icons","item","el","AccountNewForm","onFinish","useItem","useAccounts","navigate","useNavigate","query","name","labelCol","span","layout","wrapperCol","initialValues","initialValue","formValues","mutate","console","log","UI_ROUTES","autoComplete","label","rules","message","required","style","width","offset","type","htmlType","disabled","isLoading","AccountsPage","useState","isAddAccount","setIsAddAccount","AccountsList","onClick"],"sourceRoot":""}
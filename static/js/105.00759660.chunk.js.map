{"version":3,"file":"static/js/105.00759660.chunk.js","mappings":"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","sources":["components/_shared/_base/Button.tsx","components/_shared/_base/DatePicker.tsx","components/_shared/_base/HeaderBlock.tsx","components/_shared/_base/HeaderTitle.tsx","components/_shared/_base/Select.tsx","components/_shared/buttons/FilterButton.svg","components/_shared/buttons/FilterButton.tsx","components/_shared/selects/AccountsSelect.tsx","components/_shared/selects/CategoriesSelect.tsx","hooks/useTransactionTypes.ts","components/_shared/selects/TransactionTypeSelect.tsx","components/transactions/TransactionsFilters.tsx","components/transactions/TransactionsGroup.tsx","components/transactions/TransactionsListByDates.tsx","components/transactions/pages/TransactionsPage.tsx","constants/formats.ts","stores/CategoriesStore.ts","hooks/useCategories.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-interface */\r\nimport { Button as AntdButton, ButtonProps as AntdButtonProps } from 'antd';\r\nimport { CSSProperties } from 'react';\r\n\r\nexport interface ButtonProps extends AntdButtonProps {}\r\n\r\nexport const Button: React.VFC<ButtonProps> = ({ ...props }) => {\r\n  const style: CSSProperties = {\r\n    background: props.type === 'primary' ? 'linear-gradient(180deg, #008f8c 0%, #0fc2c0 100%)' : '',\r\n    border: 'none',\r\n  };\r\n  return <AntdButton {...props} style={style} />;\r\n};\r\n","import { DatePicker as AntdDatePicker, DatePickerProps as AntdDatePickerProps } from 'antd';\r\nimport { Moment } from 'moment';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU'; //если потребуется где-то еще - перейти на ConfigProvider из Antd\r\nimport { formats } from '../../../constants/formats';\r\n\r\nexport interface DatePickerProps {\r\n  withTime?: boolean;\r\n  value?: Moment;\r\n  placeholder?: string;\r\n  onChange?: AntdDatePickerProps['onChange'];\r\n}\r\n\r\nexport const DatePicker: React.VFC<DatePickerProps> = ({ withTime, onChange, value, placeholder }) => (\r\n  <AntdDatePicker\r\n    format={withTime ? formats.dateMoment.withTime : formats.dateMoment.short}\r\n    locale={locale}\r\n    showTime={withTime}\r\n    placeholder={placeholder || 'Выберите дату'}\r\n    value={value}\r\n    onChange={onChange}\r\n  />\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderBlock = styled.div`\r\n  height: 64px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: linear-gradient(180deg, #008f8c 0%, #0fc2c0 100%);\r\n  border-radius: 0px 0px 5px 5px;\r\n  padding: 12px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderTitle = styled.div`\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  color: ${({ theme }) => theme.text.header};\r\n`;\r\n","import { Select as AntdSelect } from 'antd';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface Props {\r\n  allowClear?: boolean;\r\n  children?: ReactNode;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  value?: number;\r\n  onChange?: (newValue: number) => void;\r\n}\r\n\r\nexport const Select: React.FC<Props> = ({ allowClear, children, disabled, loading, value, onChange }) => {\r\n  return (\r\n    <AntdSelect allowClear={allowClear} disabled={disabled} loading={loading} value={value != 0 ? value : undefined} onChange={onChange}>\r\n      {children}\r\n    </AntdSelect>\r\n  );\r\n};\r\n\r\nexport const SelectOption: React.FC<{ value?: string | number }> = ({ children }) => <AntdSelect.Option>{children}</AntdSelect.Option>;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFilterButton(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 24,\n    viewBox: \"0 0 30 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 0.480003C13.815 0.480003 12.82 1.30251 12.5325 2.4H0.920002C0.690005 2.3975 0.475003 2.5175 0.357499 2.7175C0.242497 2.9175 0.242497 3.1625 0.357499 3.3625C0.474997 3.5625 0.689998 3.6825 0.920002 3.68H12.5325C12.82 4.77749 13.815 5.6 15 5.6C16.185 5.6 17.18 4.77749 17.4675 3.68H29.08C29.31 3.6825 29.525 3.5625 29.6425 3.3625C29.7575 3.1625 29.7575 2.9175 29.6425 2.7175C29.525 2.5175 29.31 2.3975 29.08 2.4H17.4675C17.18 1.30251 16.185 0.480003 15 0.480003V0.480003ZM15 1.76C15.695 1.76 16.2425 2.295 16.2725 2.98251C16.27 3.02 16.27 3.06 16.2725 3.1C16.2425 3.785 15.695 4.32 15 4.32C14.305 4.32 13.7575 3.785 13.7275 3.0975C13.73 3.06 13.73 3.02 13.7275 2.98C13.7575 2.295 14.305 1.76 15 1.76ZM23.96 9.44C22.775 9.44 21.78 10.2625 21.4925 11.36H0.920002C0.690005 11.3575 0.475003 11.4775 0.357499 11.6775C0.242497 11.8775 0.242497 12.1225 0.357499 12.3225C0.474997 12.5225 0.689998 12.6425 0.920002 12.64H21.4925C21.78 13.7375 22.775 14.56 23.96 14.56C25.145 14.56 26.14 13.7375 26.4275 12.64H29.08C29.31 12.6425 29.525 12.5225 29.6425 12.3225C29.7575 12.1225 29.7575 11.8775 29.6425 11.6775C29.525 11.4775 29.31 11.3575 29.08 11.36H26.4275C26.14 10.2625 25.145 9.44 23.96 9.44ZM23.96 10.72C24.655 10.72 25.2025 11.255 25.2325 11.9425C25.23 11.98 25.23 12.02 25.2325 12.06C25.2025 12.745 24.655 13.28 23.96 13.28C23.265 13.28 22.7175 12.745 22.6875 12.0575C22.69 12.02 22.69 11.98 22.6875 11.94C22.7175 11.255 23.265 10.72 23.96 10.72ZM7.96 18.4C6.775 18.4 5.78 19.2225 5.4925 20.32H0.920002C0.690005 20.3175 0.475003 20.4375 0.357499 20.6375C0.242497 20.8375 0.242497 21.0825 0.357499 21.2825C0.474997 21.4825 0.689998 21.6025 0.920002 21.6H5.4925C5.78 22.6975 6.775 23.52 7.96 23.52C9.145 23.52 10.14 22.6975 10.4275 21.6H29.08C29.31 21.6025 29.525 21.4825 29.6425 21.2825C29.7575 21.0825 29.7575 20.8375 29.6425 20.6375C29.525 20.4375 29.31 20.3175 29.08 20.32H10.4275C10.14 19.2225 9.145 18.4 7.96 18.4ZM7.96 19.68C8.655 19.68 9.2025 20.215 9.2325 20.9025C9.23 20.94 9.23 20.98 9.2325 21.02C9.2025 21.705 8.655 22.24 7.96 22.24C7.265 22.24 6.7175 21.705 6.6875 21.0175C6.69 20.98 6.69 20.94 6.6875 20.9C6.71751 20.215 7.265 19.68 7.96 19.68Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilterButton);\nexport default __webpack_public_path__ + \"static/media/FilterButton.0469a70f86337398159d9b026a36e8e7.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport { ReactComponent as FilterButtonSVG } from './FilterButton.svg';\r\n\r\nconst FilterButtonWrapper = styled.div`\r\n  cursor: pointer;\r\n  position: relative;\r\n`;\r\n\r\nconst Counter = styled.span`\r\n  position: absolute;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding-left: 4px;\r\n  bottom: 0px;\r\n  right: -5px;\r\n  border-radius: 8px;\r\n  line-height: 18px;\r\n  background-color: ${({ theme }) => theme.background.main};\r\n  color: ${({ theme }) => theme.text.active};\r\n`;\r\n\r\nexport const FilterButton: React.VFC<{ filtersCount?: number; onClick: () => void; showFilters: boolean }> = ({\r\n  showFilters,\r\n  onClick,\r\n  filtersCount,\r\n}) => (\r\n  <FilterButtonWrapper>\r\n    <FilterButtonSVG onClick={onClick}>{showFilters ? 'Скрыть фильтры' : 'Показать фильтры'}</FilterButtonSVG>\r\n    {!!filtersCount && <Counter>{filtersCount}</Counter>}\r\n  </FilterButtonWrapper>\r\n);\r\n","import { useAccounts } from '../../../hooks/useAccounts';\r\nimport { Select, SelectOption } from '../_base/Select';\r\n\r\ninterface Props {\r\n  allowClear?: boolean;\r\n  value?: number;\r\n  onChange?: (newValue: number) => void;\r\n}\r\n\r\nexport const AccountsSelect: React.VFC<Props> = ({ allowClear, value, onChange }) => {\r\n  const { isLoading: isAccountsLoading, data: accounts } = useAccounts().useGetAccountsList(false);\r\n\r\n  return (\r\n    <Select loading={isAccountsLoading} allowClear={allowClear} value={value} onChange={onChange}>\r\n      {accounts?.map((acc) => (\r\n        <SelectOption key={acc.id} value={acc.id}>\r\n          {acc.name}\r\n        </SelectOption>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import { TreeSelect } from 'antd';\r\nimport { useCategories } from '../../../hooks/useCategories';\r\nimport { ETRANSACTION_TYPE } from '../../../server/types/transactions';\r\n\r\ninterface Props {\r\n  onChange?: (newValue: number) => void;\r\n  typeId?: ETRANSACTION_TYPE;\r\n  value?: number;\r\n  allowClear?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const CategoriesSelect: React.VFC<Props> = ({ typeId, onChange, value, allowClear, disabled }) => {\r\n  const { isLoading, data: categoriesTree } = useCategories().useGetTree({ typeId: typeId });\r\n\r\n  return (\r\n    <TreeSelect\r\n      treeData={categoriesTree}\r\n      allowClear={allowClear}\r\n      loading={isLoading}\r\n      disabled={disabled || !typeId}\r\n      onChange={onChange}\r\n      value={value != 0 ? value : undefined}\r\n      dropdownStyle={{\r\n        overflow: 'auto',\r\n      }}\r\n      treeDefaultExpandAll\r\n    />\r\n  );\r\n};\r\n","import { useQuery } from 'react-query';\r\nimport { LocalTransactionType } from '../server/types/categories';\r\nimport { ETRANSACTION_TYPE } from '../server/types/transactions';\r\n\r\nexport const transactionTypesQueryKey = 'transactionTypes';\r\n\r\nconst types: LocalTransactionType[] = [\r\n  { id: ETRANSACTION_TYPE.EXPENSE, name: 'Расход' },\r\n  { id: ETRANSACTION_TYPE.INCOME, name: 'Доход' },\r\n  { id: ETRANSACTION_TYPE.RETURN_EXPENSE, name: 'Возврат расхода' },\r\n  { id: ETRANSACTION_TYPE.RETURN_INCOME, name: 'Возврат дохода' },\r\n  { id: ETRANSACTION_TYPE.TRANSFER, name: 'Перевод между своими счетами' },\r\n];\r\n\r\nconst getTypes = (hideReturns: boolean) =>\r\n  new Promise<LocalTransactionType[]>((resolve) => {\r\n    if (hideReturns) {\r\n      resolve(types.filter((type) => type.id !== ETRANSACTION_TYPE.RETURN_EXPENSE && type.id !== ETRANSACTION_TYPE.RETURN_INCOME));\r\n    } else {\r\n      resolve(types);\r\n    }\r\n  });\r\n\r\nexport const useTransactionTypes = (hideReturns?: boolean) =>\r\n  useQuery([transactionTypesQueryKey, hideReturns], () => getTypes(!!hideReturns));\r\n","import { useTransactionTypes } from '../../../hooks/useTransactionTypes';\r\nimport { Select, SelectOption } from '../_base/Select';\r\n\r\ninterface Props {\r\n  allowClear?: boolean;\r\n  onChange?: (newValue: number) => void;\r\n  value?: number;\r\n  hideReturns?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const TransactionTypeSelect: React.VFC<Props> = ({ allowClear, value, hideReturns, disabled, onChange }) => {\r\n  const { isLoading: isTranTypesLoading, data: tranTypes } = useTransactionTypes(hideReturns);\r\n  return (\r\n    <Select allowClear={allowClear} loading={isTranTypesLoading} onChange={onChange} value={value} disabled={disabled}>\r\n      {tranTypes?.length &&\r\n        tranTypes?.map((tran) => (\r\n          <SelectOption key={tran.id} value={tran.id}>\r\n            {tran.name}\r\n          </SelectOption>\r\n        ))}\r\n    </Select>\r\n  );\r\n};\r\n","import { Form } from 'antd';\r\n\r\nimport { useState } from 'react';\r\nimport { GetTransactionsQueryParams } from '../../hooks/useTransactions';\r\nimport { ETRANSACTION_TYPE } from '../../server/types/transactions';\r\nimport { AccountsSelect } from '../_shared/selects/AccountsSelect';\r\nimport { CategoriesSelect } from '../_shared/selects/CategoriesSelect';\r\nimport { TransactionTypeSelect } from '../_shared/selects/TransactionTypeSelect';\r\nimport { Button } from '../_shared/_base/Button';\r\nimport { DatePicker } from '../_shared/_base/DatePicker';\r\n\r\nexport const TransactionsFilters: React.VFC<{\r\n  onClear: () => void;\r\n  onFinish: (params: GetTransactionsQueryParams) => void;\r\n  params: GetTransactionsQueryParams;\r\n}> = ({ params, onClear, onFinish }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [typeId, setTypeId] = useState<ETRANSACTION_TYPE | undefined>(params.typeId ? params.typeId : undefined);\r\n\r\n  const [isSubmitDisabled, setisSubmitDisabled] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"TransactionsFilters\"\r\n        form={form}\r\n        onValuesChange={() => {\r\n          setTypeId(form.getFieldValue('typeId'));\r\n          setisSubmitDisabled(form.getFieldsError().filter(({ errors }) => errors.length).length > 0);\r\n        }}\r\n        layout=\"horizontal\"\r\n        labelAlign=\"left\"\r\n        initialValues={params}\r\n        onFinish={(formValues) => {\r\n          onFinish(formValues);\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div style={{ marginTop: 20, display: 'flex', alignItems: 'baseline' }}>\r\n          <Form.Item name=\"dateFrom\" style={{ display: 'inline-block' }}>\r\n            <DatePicker placeholder=\"Начало периода\" />\r\n          </Form.Item>\r\n          <span style={{ margin: '0 12px 0 12px' }}>-</span>\r\n          <Form.Item name=\"dateEnd\" style={{ display: 'inline-block' }}>\r\n            <DatePicker placeholder=\"Конец периода\" />\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item label=\"Счет\" name=\"accountId\">\r\n          <AccountsSelect allowClear />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Тип\" name=\"typeId\">\r\n          <TransactionTypeSelect\r\n            allowClear\r\n            onChange={() => {\r\n              form.setFieldsValue({ categoryId: undefined });\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        {typeId !== ETRANSACTION_TYPE.TRANSFER && (\r\n          <Form.Item label=\"Категория\" name=\"categoryId\">\r\n            <CategoriesSelect typeId={typeId} />\r\n          </Form.Item>\r\n        )}\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={() => {\r\n                onClear();\r\n              }}\r\n            >\r\n              Очистить\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitDisabled}>\r\n              Применить\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { LocalTransactionWithNames } from '../../server/types/transactions';\r\nimport { T1 } from '../_shared/_base/Text';\r\nimport { TransactionItem } from './TransactionItem';\r\n\r\nconst TransactionsGroupWrapper = styled.div`\r\n  margin: 20px 0 20px 0;\r\n`;\r\n\r\nexport const TransactionsGroup: React.VFC<{ date: string; transactions: LocalTransactionWithNames[] }> = observer(\r\n  ({ date, transactions }) => (\r\n    <TransactionsGroupWrapper>\r\n      <T1>{date}</T1>\r\n      {transactions.map((tran) => (\r\n        <TransactionItem key={tran.id} tran={tran} showOnlyTime />\r\n      ))}\r\n    </TransactionsGroupWrapper>\r\n  )\r\n);\r\n\r\nTransactionsGroup.displayName = 'TransactionsGroup';\r\n","import React, { useMemo } from 'react';\r\nimport { LocalTransactionWithNames } from '../../server/types/transactions';\r\nimport { formatOnlyDateISOstr } from '../../utils/format';\r\nimport { TransactionsGroup } from './TransactionsGroup';\r\n\r\nconst splitTransactionsByDate: (transactions: LocalTransactionWithNames[]) => Map<string, LocalTransactionWithNames[]> = (\r\n  transactions: LocalTransactionWithNames[]\r\n) => {\r\n  const res: Map<string, LocalTransactionWithNames[]> = new Map();\r\n\r\n  for (let i = 0; i < transactions.length; i++) {\r\n    const shortDt = formatOnlyDateISOstr(transactions[i].dt);\r\n    if (!res.get(shortDt)) {\r\n      res.set(shortDt, []);\r\n    }\r\n    res.get(shortDt)?.push(transactions[i]);\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const TransactionsListByDates: React.VFC<{ transactions: LocalTransactionWithNames[] }> = ({ transactions }) => {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const splitedTrans = useMemo(() => splitTransactionsByDate(transactions ? transactions : []), [JSON.stringify(transactions)]);\r\n  const dates = [...splitedTrans.keys()];\r\n\r\n  return <>{dates.length > 0 && dates.map((dt) => <TransactionsGroup key={dt} date={dt} transactions={splitedTrans.get(dt) || []} />)}</>;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { TransactionsFilters } from '../TransactionsFilters';\r\nimport { TransactionsListByDates } from '../TransactionsListByDates';\r\n\r\nimport { Button } from 'antd';\r\nimport moment from 'moment';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { formats } from '../../../constants/formats';\r\nimport { GetTransactionsQueryParams, useTransactions } from '../../../hooks/useTransactions';\r\nimport { FilterButton } from '../../_shared/buttons/FilterButton';\r\nimport { Loader } from '../../_shared/Loader';\r\n\r\nimport { HeaderBlock } from '../../_shared/_base/HeaderBlock';\r\nimport { HeaderTitle } from '../../_shared/_base/HeaderTitle';\r\n\r\nexport const TransactionsPage: React.FC = () => {\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [search, setSearch] = useSearchParams();\r\n  const searchAsObject = Object.fromEntries(new URLSearchParams(search));\r\n  const initialFilterParams: GetTransactionsQueryParams = {\r\n    typeId: searchAsObject.typeId ? parseInt(searchAsObject.typeId) : undefined,\r\n  };\r\n  if (String(searchAsObject.categoryId) !== 'undefined') {\r\n    initialFilterParams.categoryId = searchAsObject.categoryId;\r\n  }\r\n  if (String(searchAsObject.accountId) !== 'undefined') {\r\n    initialFilterParams.accountId = searchAsObject.accountId;\r\n  }\r\n  if (String(searchAsObject.dateFrom) !== 'undefined') {\r\n    initialFilterParams.dateFrom = moment(searchAsObject.dateFrom);\r\n  } else {\r\n    const startOfMonth = new Date();\r\n    startOfMonth.setDate(1);\r\n    initialFilterParams.dateFrom = moment(startOfMonth);\r\n  }\r\n  if (String(searchAsObject.dateEnd) !== 'undefined') {\r\n    initialFilterParams.dateEnd = moment(searchAsObject.dateEnd);\r\n  }\r\n\r\n  const [filterParams, setFilterParams] = useState<GetTransactionsQueryParams>(initialFilterParams);\r\n\r\n  const { useGetList: useGetTransactions } = useTransactions();\r\n  const { isLoading, isError, data: transactions } = useGetTransactions(filterParams);\r\n\r\n  let filtersCount = 0;\r\n  for (const key in filterParams) {\r\n    if (filterParams[key as keyof GetTransactionsQueryParams]) {\r\n      filtersCount++;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <HeaderTitle>История</HeaderTitle>\r\n        <FilterButton\r\n          onClick={() => {\r\n            setShowFilters(!showFilters);\r\n          }}\r\n          showFilters={showFilters}\r\n          filtersCount={filtersCount}\r\n        />\r\n      </HeaderBlock>\r\n\r\n      {showFilters && (\r\n        <TransactionsFilters\r\n          params={filterParams}\r\n          onClear={() => {\r\n            setShowFilters(false);\r\n            setFilterParams({ ...{} });\r\n          }}\r\n          onFinish={(params) => {\r\n            setShowFilters(false);\r\n            setFilterParams(params);\r\n            const paramsForSearch: GetTransactionsQueryParams = {};\r\n            for (const key in params) {\r\n              if (params[key as keyof GetTransactionsQueryParams] !== undefined) {\r\n                const key1 = key as keyof GetTransactionsQueryParams;\r\n                paramsForSearch[key1] = params[key1];\r\n              }\r\n            }\r\n\r\n            setSearch({\r\n              ...paramsForSearch,\r\n              ...(paramsForSearch.dateFrom && { dateFrom: paramsForSearch.dateFrom.format(formats.dateMoment.short) }),\r\n              ...(paramsForSearch.dateEnd && { dateEnd: paramsForSearch.dateEnd.format(formats.dateMoment.short) }),\r\n            } as unknown as URLSearchParams);\r\n          }}\r\n        />\r\n      )}\r\n      {isError && <>Ошибка загрузки транзакций</>}\r\n      {isLoading && (\r\n        <div style={{ textAlign: 'center', width: '100%' }}>\r\n          <Loader size=\"large\" />\r\n        </div>\r\n      )}\r\n      {transactions && <TransactionsListByDates transactions={transactions} />}\r\n      <div style={{ marginTop: '1rem' }}>\r\n        <span style={{ marginRight: '0.5rem' }}>Страница: {currentPage + 1}</span>\r\n        {currentPage > 0 && (\r\n          <Button\r\n            onClick={() => {\r\n              setCurrentPage(currentPage - 1);\r\n            }}\r\n          >\r\n            Предыдущая\r\n          </Button>\r\n        )}\r\n        <Button\r\n          onClick={() => {\r\n            setCurrentPage(currentPage + 1);\r\n          }}\r\n        >\r\n          Следующая\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionsPage;\r\n","export const formats = {\r\n  date: { short: 'yyyy-MM-dd', withTime: 'YYYY-MM-dd HH:mm', time: 'HH:mm' },\r\n  dateMoment: { short: 'yyyy-MM-DD', withTime: 'YYYY-MM-DD HH:mm' }, //todo: пока придется поддерживать 2 формата, далее убрать зависимость от Moment переходом на другие пикеры либо https://ant.design/docs/react/replace-moment\r\n};\r\n","import { v4 } from 'uuid';\r\nimport { Category } from '../server/entity/Category';\r\nimport { LocalCategory, LocalCategoryTreeItem } from '../server/types/categories';\r\nimport { ETRANSACTION_TYPE } from '../server/types/transactions';\r\nimport { getLocalDataService } from '../services/LocalDataService';\r\nimport { formatDateISOstr } from '../utils/format';\r\n\r\nclass CategoriesStore {\r\n  private static instance: CategoriesStore;\r\n\r\n  public static getInstance(): CategoriesStore {\r\n    if (!CategoriesStore.instance) {\r\n      CategoriesStore.instance = new CategoriesStore();\r\n    }\r\n\r\n    return CategoriesStore.instance;\r\n  }\r\n\r\n  private _localDataService = getLocalDataService();\r\n\r\n  public create = (formValues: Category) =>\r\n    new Promise<void>((resolve) => {\r\n      const categories = this._localDataService.categories;\r\n      categories.push({\r\n        id: v4(),\r\n        isActive: formValues.isActive ? formValues.isActive : true,\r\n        mpath: '',\r\n        name: formValues.name ? formValues.name : '',\r\n        order: formValues.order ? formValues.order : 0,\r\n        parentCategoryId: formValues.parentCategory?.id ? formValues.parentCategory.id : null,\r\n        typeId: formValues.type?.id ? formValues.type?.id : ETRANSACTION_TYPE.EXPENSE,\r\n      });\r\n      this._localDataService.categories = categories.sort((a, b) => a.order - b.order);\r\n      resolve();\r\n    });\r\n\r\n  public delete = (id: string) =>\r\n    new Promise<void>((resolve, reject) => {\r\n      const categories = this._localDataService.categories;\r\n      const catToUpdateIdx = categories.findIndex((item) => item.id === id);\r\n\r\n      if (catToUpdateIdx === -1) {\r\n        reject('category delete, id not found:' + id);\r\n        return;\r\n      }\r\n\r\n      const transactions = this._localDataService.transactions;\r\n      const catTransactions = transactions.filter((tran) => tran.categoryId === id);\r\n\r\n      if (catTransactions.length) {\r\n        alert(\r\n          'Счет сделан неактивным, а не удалён, т.к. по счету были найдены транзакции. \\nДаты:\\n' +\r\n            catTransactions.map((tran) => formatDateISOstr(tran.dt)).join('\\n')\r\n        );\r\n        categories[catToUpdateIdx].isActive = false;\r\n      } else {\r\n        console.log('category delete', catToUpdateIdx);\r\n        categories.splice(catToUpdateIdx, 1);\r\n      }\r\n\r\n      this._localDataService.categories = categories;\r\n\r\n      resolve();\r\n    });\r\n\r\n  public getOne = (id: string) => {\r\n    const categories = this._localDataService.categories;\r\n    return categories.find((item) => item.id === id);\r\n  };\r\n\r\n  public getTree = (typeId?: ETRANSACTION_TYPE, showHidden?: boolean) =>\r\n    new Promise<LocalCategoryTreeItem[]>((resolve) => {\r\n      const rawCategories = this._localDataService.categories;\r\n      const categories = rawCategories.filter((cat) => {\r\n        let show = true;\r\n        if (typeId) {\r\n          let transformedTypeId = typeId;\r\n          if (typeId === ETRANSACTION_TYPE.RETURN_EXPENSE) {\r\n            transformedTypeId = ETRANSACTION_TYPE.EXPENSE;\r\n          }\r\n          if (typeId === ETRANSACTION_TYPE.RETURN_INCOME) {\r\n            transformedTypeId = ETRANSACTION_TYPE.INCOME;\r\n          }\r\n          if (cat.typeId !== transformedTypeId) {\r\n            show = false;\r\n          }\r\n        }\r\n        if (!showHidden && !cat.isActive) {\r\n          show = false;\r\n        }\r\n        return show;\r\n      });\r\n      const rootCategories = categories.filter((cat) => cat.parentCategoryId === null);\r\n      const categoriesTree: LocalCategoryTreeItem[] = rootCategories.map((rootCat) => {\r\n        const children: LocalCategoryTreeItem[] = categories\r\n          .filter((cat) => rootCat.id === cat.parentCategoryId)\r\n          .map((item) => this.transformCategoryToTreeItem(item));\r\n        return { ...this.transformCategoryToTreeItem(rootCat), children: children };\r\n      });\r\n      resolve(categoriesTree);\r\n    });\r\n\r\n  private transformCategoryToTreeItem: (cat: LocalCategory) => LocalCategoryTreeItem = (cat: LocalCategory) => {\r\n    return { id: cat.id, key: cat.id, value: cat.id, isActive: cat.isActive, title: cat.name };\r\n  };\r\n\r\n  public update = (id: string, formValues: LocalCategory) =>\r\n    new Promise<void>((resolve, reject) => {\r\n      const categories = this._localDataService.categories;\r\n      const categoryToUpdateIdx = categories.findIndex((item) => item.id === id);\r\n      if (categoryToUpdateIdx === -1) {\r\n        console.error('categoryToUpdateIdx not found', id, formValues);\r\n        reject();\r\n        return;\r\n      }\r\n      categories.splice(categoryToUpdateIdx, 1);\r\n      categories.push({ ...formValues, id: id });\r\n      this._localDataService.categories = categories.sort((a, b) => a.order - b.order);\r\n      resolve();\r\n    });\r\n}\r\n\r\nexport const getCategoriesStore = () => CategoriesStore.getInstance();\r\n","import { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport { Category } from '../server/entity/Category';\r\nimport { LocalCategory } from '../server/types/categories';\r\nimport { ETRANSACTION_TYPE } from '../server/types/transactions';\r\nimport { getCategoriesStore } from '../stores/CategoriesStore';\r\n\r\nexport const categoriesQueryKey = 'categories';\r\n\r\nexport const useCategories = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const categoriesStore = getCategoriesStore();\r\n\r\n  const useGetTree = (params: { showHidden?: boolean; typeId?: ETRANSACTION_TYPE }) => {\r\n    const { typeId, showHidden } = params;\r\n\r\n    return useQuery([categoriesQueryKey, 'tree', typeId, showHidden], () => categoriesStore.getTree(typeId, showHidden));\r\n  };\r\n\r\n  const useGetOne = (id: string) =>\r\n    useQuery([categoriesQueryKey, id], () => categoriesStore.getOne(id), {\r\n      enabled: !!id,\r\n    });\r\n\r\n  const useItem = (method: 'PUT' | 'DELETE', id: string, onSuccess?: () => void) =>\r\n    useMutation(\r\n      (formValues: Record<string, unknown>) => {\r\n        return method === 'PUT' ? categoriesStore.update(id, formValues as unknown as LocalCategory) : categoriesStore.delete(id);\r\n      },\r\n      {\r\n        onSuccess: async () => {\r\n          console.log('useItem onSuccess', method);\r\n          await queryClient.cancelQueries(categoriesQueryKey);\r\n          queryClient.invalidateQueries([categoriesQueryKey, id]);\r\n          queryClient.invalidateQueries(categoriesQueryKey);\r\n          onSuccess && onSuccess();\r\n        },\r\n      }\r\n    );\r\n\r\n  const useCreate = () =>\r\n    useMutation(\r\n      (formValues: Category) => {\r\n        return categoriesStore.create(formValues);\r\n      },\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries(categoriesQueryKey);\r\n        },\r\n      }\r\n    );\r\n\r\n  return { useCreate, useGetTree, useGetOne, useItem };\r\n};\r\n"],"names":["Button","props","style","background","type","border","DatePicker","withTime","onChange","value","placeholder","format","formats","locale","showTime","HeaderBlock","styled","HeaderTitle","theme","text","header","Select","allowClear","children","disabled","loading","undefined","SelectOption","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFilterButton","_ref","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","FilterButtonWrapper","Counter","main","active","FilterButton","showFilters","onClick","filtersCount","AccountsSelect","useAccounts","useGetAccountsList","isAccountsLoading","isLoading","accounts","data","map","acc","name","CategoriesSelect","typeId","useCategories","useGetTree","categoriesTree","treeData","dropdownStyle","overflow","treeDefaultExpandAll","types","ETRANSACTION_TYPE","useTransactionTypes","hideReturns","useQuery","Promise","resolve","filter","getTypes","TransactionTypeSelect","isTranTypesLoading","tranTypes","tran","TransactionsFilters","params","onClear","onFinish","Form","form","useState","setTypeId","isSubmitDisabled","setisSubmitDisabled","onValuesChange","getFieldValue","getFieldsError","errors","layout","labelAlign","initialValues","formValues","autoComplete","marginTop","display","alignItems","margin","label","setFieldsValue","categoryId","wrapperCol","offset","span","htmlType","TransactionsGroupWrapper","TransactionsGroup","observer","date","transactions","T1","TransactionItem","showOnlyTime","displayName","TransactionsListByDates","splitedTrans","useMemo","res","Map","shortDt","formatOnlyDateISOstr","dt","get","set","push","splitTransactionsByDate","JSON","stringify","dates","TransactionsPage","setShowFilters","currentPage","setCurrentPage","useSearchParams","search","setSearch","searchAsObject","fromEntries","URLSearchParams","initialFilterParams","parseInt","String","accountId","dateFrom","moment","startOfMonth","Date","setDate","dateEnd","filterParams","setFilterParams","useGetTransactions","useTransactions","useGetList","isError","paramsForSearch","key1","textAlign","Loader","size","marginRight","short","time","dateMoment","CategoriesStore","_localDataService","getLocalDataService","create","categories","v4","isActive","mpath","order","parentCategoryId","parentCategory","sort","a","b","delete","reject","catToUpdateIdx","findIndex","item","catTransactions","alert","formatDateISOstr","join","console","log","splice","getOne","find","getTree","showHidden","cat","show","transformedTypeId","rootCat","transformCategoryToTreeItem","update","categoryToUpdateIdx","error","instance","categoriesQueryKey","queryClient","useQueryClient","categoriesStore","getInstance","useCreate","useMutation","onSuccess","invalidateQueries","useGetOne","enabled","useItem","method","cancelQueries"],"sourceRoot":""}